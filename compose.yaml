services:
  manager:
    depends_on:
      - worker
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./build/libs:/app/build/libs
    ports:
      - "8080:8080"
    environment:
      - TZ=Asia/Novosibirsk
      - SPRING_APPLICATION_NAME=manager

  worker:
    build:
      context: .
      dockerfile: ../worker/Dockerfile
    volumes:
      - ../worker/build/libs:/app/build/libs
    deploy:
      mode: replicated
      replicas: 2
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - TZ=Asia/Novosibirsk
      - SPRING_APPLICATION_NAME=worker

  rabbitmq:
    image: rabbitmq:latest
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: pass
      RABBITMQ_DEFAULT_VHOST: /
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics check_running" ]
      interval: 30s
      timeout: 10s
      retries: 5

  mongo:
    image: mongo:4.4
    ports:
      - "27017:27017"
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rs0", "--bind_ip_all" ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "'quit(db.getSiblingDB(\"admin\").runCommand({replSetGetStatus: 1}).myState == 1 ? 0 : 1)'" ]
      interval: 30s
      timeout: 10s
      retries: 5

  mongo_1:
    image: mongo:4.4
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rs0", "--bind_ip_all" ]

  mongo_2:
    image: mongo:4.4
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rs0", "--bind_ip_all" ]

  mongosetup:
    image: mongo:4.4
    depends_on:
      - mongo
      - mongo_1
      - mongo_2
    restart: "no"
    volumes:
      - ./rs.sh:/scripts/rs.sh
    entrypoint: [ "bash", "-c", "sleep 10 && /scripts/rs.sh" ]
